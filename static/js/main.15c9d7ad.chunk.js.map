{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","titulo","Formulario","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","ciudad","_this","current","value","pais","datosConsulta","onSubmit","this","ref","id","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarResultado","resultado","_this$props$resultado","name","weather","main","alt","concat","title","urlIcono","icon","temp","toFixed","src","temp_max","temp_min","Exception","console","log","App","state","error","consultarApi","_this$state$consulta","consulta","url","fetch","then","json","datos","setState","catch","prevProps","prevState","error2","componentes_Error","undefined","cod","componentes_Clima","componentes_Header","componentes_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15c9d7ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper light-blue darken-2\">\r\n                    <a href=\"https://rzzsnpai.github.io\" className=\"brand-logo\">{props.titulo}</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeader.propTypes={\r\n    titulo: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Formulario extends Component {\r\n    \r\n    //crear refs\r\n    ciudadRef=React.createRef();\r\n    paisRef=React.createRef();\r\n\r\n    \r\n\r\n    buscarClima=(e)=>{\r\n        e.preventDefault();\r\n\r\n        //leer refs y crear objetos\r\n        const respuesta={\r\n            ciudad: this.ciudadRef.current.value,\r\n            pais: this.paisRef.current.value\r\n        }\r\n        //enviar props\r\n        this.props.datosConsulta(respuesta);\r\n        //resetear la wea\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <form onSubmit={this.buscarClima}>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <input  ref={this.ciudadRef} id=\"ciudad\" type=\"text\"/>\r\n                                <label htmlFor=\"ciudad\">Ciudad: </label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <select ref={this.paisRef}>\r\n                                    <option value=\"\" defaultValue>\r\n                                        Elige un pais\r\n                                    </option>\r\n                                    <option value=\"AR\">Argentina</option>\r\n                                    <option value=\"CL\">Chile</option>\r\n                                    <option value=\"UK\">Inglaterra</option>\r\n                                    <option value=\"US\">Estados Unidos</option>\r\n                                    <option value=\"CO\">Colombia</option>\r\n                                    <option value=\"ES\">Espa√±a</option>\r\n                                    <option value=\"FR\">Francia</option>\r\n                                </select>\r\n                                <label htmlFor=\"pais\">Pais: </label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m12 l4 offset-2 buscador\">\r\n                                <input type=\"submit\" className=\"waves-effect waves-light btn-large yellow accent-4\" value=\"Buscar...\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nFormulario.propTypes={\r\n    datosConsulta: PropTypes.func.isRequired\r\n}\r\nexport default Formulario;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nconst Error = (props) => {\r\n    return (  \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6 offset-m3\">\r\n                    <div className=\"card-panel red darken-4 error\">\r\n                        {props.mensaje}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nError.propTypes={\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Clima extends Component {\r\n    \r\n    mostrarResultado= () => {\r\n        \r\n        //obtener los datos de la consulta\r\n        try{\r\n            if(this.props.resultado){\r\n                const {name, weather, main} = this.props.resultado;\r\n\r\n                if(!name || !weather || !main) return null;\r\n    \r\n                const kelvin = 273.15;\r\n                const alt = `Clima de ${name}`;\r\n                const title=`Clima de ${name}`;\r\n                \r\n                const urlIcono= `https://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n    \r\n                return (\r\n                    <div className=\"row\">\r\n                        <div className=\"resultado col s12 m12 l6 offset-m22 offset-l3\">\r\n                            <div className=\"card-panel light-blue align-center\">\r\n                                <span className=\"white-text\">\r\n                                    <h2>Resultado Clima de: {name}</h2>\r\n                                    <p className=\"temperatura\">\r\n                                        Actual: {(main.temp - kelvin).toFixed(2)} &deg;C \r\n                                        <img src={urlIcono} alt={alt} title={title}/>\r\n                                    </p>\r\n                                    <p>Max. {(main.temp_max - kelvin).toFixed(2)} &deg;C</p>\r\n                                    <p>Min. {(main.temp_min - kelvin).toFixed(2)} &deg;C</p>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                )            \r\n    \r\n            }\r\n\r\n        }catch(Exception){\r\n            console.log('error en clima :-c');\r\n        }\r\n\r\n    }\r\n\r\n    render() { \r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                {this.mostrarResultado()}\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nClima.propTypes={\r\n    resultado: PropTypes.object.isRequired\r\n}\r\nexport default Clima;","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Error from './componentes/Error';\nimport Clima from './componentes/Clima';\nclass App extends Component {\n\n  state={\n    error: false\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.consulta !== this.state.consulta){\n      this.consultarApi();\n    }\n    \n  }\n\n  componentDidMount(){\n    this.setState({\n      error:false,\n      consulta:{},\n      resultado: {},\n      error2: false\n    })\n  }\n\n  consultarApi=()=>{\n    const {ciudad,pais}=this.state.consulta;\n    if(!ciudad || !pais)return null;\n\n    const appId='e22a9dbd43891c72265f7d7d4ad0d89b';\n    let url=`https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n\n    //query con fetch api\n      fetch(url)\n      .then(respuesta => {\n        return respuesta.json();\n      })\n      .then(datos =>{\n        this.setState({\n          resultado: datos\n        })\n      })\n      .catch(error => {\n        console.log(error);\n      })      \n\n\n    //leer la url y agregar el api key\n    \n    //consultar con fetch\n  }\n\n  datosConsulta= respuesta =>{\n    if(respuesta.ciudad === '' || respuesta.pais===''){\n      this.setState({\n        error:true\n      })      \n    }else {\n      this.setState({\n        error:false,\n        consulta: respuesta\n      })      \n    }\n  }\n\n  render() {\n\n    const error=this.state.error;\n\n    let resultado;\n\n      if(error)\n        {\n          resultado=<Error mensaje=\"Ambos campos son obligatorios\" />\n        }\n       else {\n        if(this.state.resultado!== undefined)\n        {\n          const {cod}= this.state.resultado;\n          if(cod!==\"404\")\n            {\n              resultado = <Clima resultado={this.state.resultado}/>\n            }\n              else\n              {\n                resultado=<Error mensaje=\"Ingrese una ciudad valida\" />               \n              }                     \n        }\n\n       }\n    \n\n    return (\n      <div className=\"app\">\n          <Header\n            titulo='Clima React'\n          />\n          <Formulario\n            datosConsulta={this.datosConsulta}\n            \n          />\n          {resultado}\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}